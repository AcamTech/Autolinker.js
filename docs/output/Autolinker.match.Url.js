Ext.data.JsonP.Autolinker_match_Url({"tagname":"class","name":"Autolinker.match.Url","autodetected":{},"files":[{"filename":"Url.js","href":"Url.html#Autolinker-match-Url"}],"extends":"Autolinker.match.Match","members":[{"name":"matchedText","tagname":"property","owner":"Autolinker.match.Match","id":"property-matchedText","meta":{"protected":true}},{"name":"offset","tagname":"property","owner":"Autolinker.match.Match","id":"property-offset","meta":{"protected":true}},{"name":"protocolPrepended","tagname":"property","owner":"Autolinker.match.Url","id":"property-protocolPrepended","meta":{"private":true}},{"name":"protocolRelativeMatch","tagname":"property","owner":"Autolinker.match.Url","id":"property-protocolRelativeMatch","meta":{"protected":true}},{"name":"protocolRelativeRegex","tagname":"property","owner":"Autolinker.match.Url","id":"property-protocolRelativeRegex","meta":{"private":true}},{"name":"protocolUrlMatch","tagname":"property","owner":"Autolinker.match.Url","id":"property-protocolUrlMatch","meta":{"protected":true}},{"name":"stripPrefix","tagname":"property","owner":"Autolinker.match.Url","id":"property-stripPrefix","meta":{"protected":true}},{"name":"url","tagname":"property","owner":"Autolinker.match.Url","id":"property-url","meta":{"protected":true}},{"name":"urlMatchType","tagname":"property","owner":"Autolinker.match.Url","id":"property-urlMatchType","meta":{"protected":true}},{"name":"urlPrefixRegex","tagname":"property","owner":"Autolinker.match.Url","id":"property-urlPrefixRegex","meta":{"private":true}},{"name":"constructor","tagname":"method","owner":"Autolinker.match.Url","id":"method-constructor","meta":{}},{"name":"getAnchorHref","tagname":"method","owner":"Autolinker.match.Url","id":"method-getAnchorHref","meta":{}},{"name":"getAnchorText","tagname":"method","owner":"Autolinker.match.Url","id":"method-getAnchorText","meta":{}},{"name":"getMatchedText","tagname":"method","owner":"Autolinker.match.Match","id":"method-getMatchedText","meta":{}},{"name":"getOffset","tagname":"method","owner":"Autolinker.match.Match","id":"method-getOffset","meta":{}},{"name":"getType","tagname":"method","owner":"Autolinker.match.Url","id":"method-getType","meta":{}},{"name":"getUrl","tagname":"method","owner":"Autolinker.match.Url","id":"method-getUrl","meta":{}},{"name":"getUrlMatchType","tagname":"method","owner":"Autolinker.match.Url","id":"method-getUrlMatchType","meta":{}},{"name":"removeTrailingSlash","tagname":"method","owner":"Autolinker.match.Url","id":"method-removeTrailingSlash","meta":{"private":true}},{"name":"setOffset","tagname":"method","owner":"Autolinker.match.Match","id":"method-setOffset","meta":{}},{"name":"stripProtocolRelativePrefix","tagname":"method","owner":"Autolinker.match.Url","id":"method-stripProtocolRelativePrefix","meta":{"private":true}},{"name":"stripUrlPrefix","tagname":"method","owner":"Autolinker.match.Url","id":"method-stripUrlPrefix","meta":{"private":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Autolinker.match.Url","short_doc":"Represents a Url match found in an input string which should be Autolinked. ...","component":false,"superclasses":["Autolinker.match.Match"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Autolinker.match.Match' rel='Autolinker.match.Match' class='docClass'>Autolinker.match.Match</a><div class='subclass '><strong>Autolinker.match.Url</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Url.html#Autolinker-match-Url' target='_blank'>Url.js</a></div></pre><div class='doc-contents'><p>Represents a Url match found in an input string which should be Autolinked.</p>\n\n<p>See this class's superclass (<a href=\"#!/api/Autolinker.match.Match\" rel=\"Autolinker.match.Match\" class=\"docClass\">Autolinker.match.Match</a>) for more details.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-matchedText' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Autolinker.match.Match' rel='Autolinker.match.Match' class='defined-in docClass'>Autolinker.match.Match</a><br/><a href='source/Match.html#Autolinker-match-Match-property-matchedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Match-property-matchedText' class='name expandable'>matchedText</a> : String<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-offset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Autolinker.match.Match' rel='Autolinker.match.Match' class='defined-in docClass'>Autolinker.match.Match</a><br/><a href='source/Match.html#Autolinker-match-Match-property-offset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Match-property-offset' class='name expandable'>offset</a> : Number<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-protocolPrepended' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-protocolPrepended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-protocolPrepended' class='name expandable'>protocolPrepended</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Will be set to true if the 'http://' protocol has been prepended to the url (because the\nurl did not have a protocol) ...</div><div class='long'><p>Will be set to <code>true</code> if the 'http://' protocol has been prepended to the <a href=\"#!/api/Autolinker.match.Url-property-url\" rel=\"Autolinker.match.Url-property-url\" class=\"docClass\">url</a> (because the\n<a href=\"#!/api/Autolinker.match.Url-property-url\" rel=\"Autolinker.match.Url-property-url\" class=\"docClass\">url</a> did not have a protocol)</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-protocolRelativeMatch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-protocolRelativeMatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-protocolRelativeMatch' class='name expandable'>protocolRelativeMatch</a> : Boolean<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>true if the URL is a protocol-relative match. ...</div><div class='long'><p><code>true</code> if the URL is a protocol-relative match. A protocol-relative match\nis a URL that starts with '//', and will be either http:// or https://\nbased on the protocol that the site is loaded under.</p>\n</div></div></div><div id='property-protocolRelativeRegex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-protocolRelativeRegex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-protocolRelativeRegex' class='name expandable'>protocolRelativeRegex</a> : RegExp<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The regular expression used to remove the protocol-relative '//' from the url string, for purposes\nof getAnchorText. ...</div><div class='long'><p>The regular expression used to remove the protocol-relative '//' from the <a href=\"#!/api/Autolinker.match.Url-property-url\" rel=\"Autolinker.match.Url-property-url\" class=\"docClass\">url</a> string, for purposes\nof <a href=\"#!/api/Autolinker.match.Url-method-getAnchorText\" rel=\"Autolinker.match.Url-method-getAnchorText\" class=\"docClass\">getAnchorText</a>. A protocol-relative URL is, for example, \"//yahoo.com\"</p>\n<p>Defaults to: <code>/^\\/\\//</code></p></div></div></div><div id='property-protocolUrlMatch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-protocolUrlMatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-protocolUrlMatch' class='name expandable'>protocolUrlMatch</a> : Boolean<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>true if the URL is a match which already has a protocol (i.e. ...</div><div class='long'><p><code>true</code> if the URL is a match which already has a protocol (i.e.\n'http://'), <code>false</code> if the match was from a 'www' or known TLD match.</p>\n</div></div></div><div id='property-stripPrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-stripPrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-stripPrefix' class='name expandable'>stripPrefix</a> : Boolean<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>true if 'http://' or 'https://' and/or the 'www.' should be stripped\nfrom the beginning of URL links' text, false oth...</div><div class='long'><p><code>true</code> if 'http://' or 'https://' and/or the 'www.' should be stripped\nfrom the beginning of URL links' text, <code>false</code> otherwise.</p>\n</div></div></div><div id='property-url' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-url' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-url' class='name expandable'>url</a> : String<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'><p>The url that was matched.</p>\n</div><div class='long'><p>The url that was matched.</p>\n</div></div></div><div id='property-urlMatchType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-urlMatchType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-urlMatchType' class='name expandable'>urlMatchType</a> : \"scheme\"/\"www\"/\"tld\"<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>The type of URL match that this class represents. ...</div><div class='long'><p>The type of URL match that this class represents. This helps to determine\nif the match was made in the original text with a prefixed scheme (ex:\n'http://www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or\nwas matched by a known top-level domain (ex: 'google.com').</p>\n</div></div></div><div id='property-urlPrefixRegex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-property-urlPrefixRegex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-property-urlPrefixRegex' class='name expandable'>urlPrefixRegex</a> : RegExp<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs. ...</div><div class='long'><p>A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs.</p>\n<p>Defaults to: <code>/^(https?:\\/\\/)?(www\\.)?/i</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Autolinker.match.Url-method-constructor' class='name expandable'>Autolinker.match.Url</a>( <span class='pre'>matchedText, offset, url, urlMatchType, protocolUrlMatch, protocolRelativeMatch, stripPrefix</span> ) : <a href=\"#!/api/Autolinker.match.Url\" rel=\"Autolinker.match.Url\" class=\"docClass\">Autolinker.match.Url</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>matchedText</span> : String<div class='sub-desc'><p>The original text that was matched.</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>The offset of where the match was made in the\n  input string.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url that was matched.</p>\n</div></li><li><span class='pre'>urlMatchType</span> : \"scheme\"/\"www\"/\"tld\"<div class='sub-desc'><p>The type of URL match that\n  this class represents. See <a href=\"#!/api/Autolinker.match.Url-property-urlMatchType\" rel=\"Autolinker.match.Url-property-urlMatchType\" class=\"docClass\">urlMatchType</a> for details.</p>\n</div></li><li><span class='pre'>protocolUrlMatch</span> : Boolean<div class='sub-desc'><p><code>true</code> if the URL is a match which\n  already has a protocol. See <a href=\"#!/api/Autolinker.match.Url-property-protocolUrlMatch\" rel=\"Autolinker.match.Url-property-protocolUrlMatch\" class=\"docClass\">protocolUrlMatch</a> for details.</p>\n</div></li><li><span class='pre'>protocolRelativeMatch</span> : Boolean<div class='sub-desc'><p><code>true</code> if the URL is a protocol-\n  relative match. See <a href=\"#!/api/Autolinker.match.Url-property-protocolRelativeMatch\" rel=\"Autolinker.match.Url-property-protocolRelativeMatch\" class=\"docClass\">protocolRelativeMatch</a> for details.</p>\n</div></li><li><span class='pre'>stripPrefix</span> : Boolean<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Autolinker.match.Url\" rel=\"Autolinker.match.Url\" class=\"docClass\">Autolinker.match.Url</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Autolinker.match.Match-method-constructor\" rel=\"Autolinker.match.Match-method-constructor\" class=\"docClass\">Autolinker.match.Match.constructor</a></p></div></div></div><div id='method-getAnchorHref' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-getAnchorHref' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-getAnchorHref' class='name expandable'>getAnchorHref</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the anchor href that should be generated for the match. ...</div><div class='long'><p>Returns the anchor href that should be generated for the match.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Autolinker.match.Match-method-getAnchorHref\" rel=\"Autolinker.match.Match-method-getAnchorHref\" class=\"docClass\">Autolinker.match.Match.getAnchorHref</a></p></div></div></div><div id='method-getAnchorText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-getAnchorText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-getAnchorText' class='name expandable'>getAnchorText</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the anchor text that should be generated for the match. ...</div><div class='long'><p>Returns the anchor text that should be generated for the match.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Autolinker.match.Match-method-getAnchorText\" rel=\"Autolinker.match.Match-method-getAnchorText\" class=\"docClass\">Autolinker.match.Match.getAnchorText</a></p></div></div></div><div id='method-getMatchedText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Autolinker.match.Match' rel='Autolinker.match.Match' class='defined-in docClass'>Autolinker.match.Match</a><br/><a href='source/Match.html#Autolinker-match-Match-method-getMatchedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Match-method-getMatchedText' class='name expandable'>getMatchedText</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the original text that was matched. ...</div><div class='long'><p>Returns the original text that was matched.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getOffset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Autolinker.match.Match' rel='Autolinker.match.Match' class='defined-in docClass'>Autolinker.match.Match</a><br/><a href='source/Match.html#Autolinker-match-Match-method-getOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Match-method-getOffset' class='name expandable'>getOffset</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the offset of where the match was made in the input string. ...</div><div class='long'><p>Returns the offset of where the match was made in the input string. This\nis the 0-based index of the match.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-getType' class='name expandable'>getType</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string name for the type of match that this class represents. ...</div><div class='long'><p>Returns a string name for the type of match that this class represents.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Autolinker.match.Match-method-getType\" rel=\"Autolinker.match.Match-method-getType\" class=\"docClass\">Autolinker.match.Match.getType</a></p></div></div></div><div id='method-getUrl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-getUrl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-getUrl' class='name expandable'>getUrl</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the url that was matched, assuming the protocol to be 'http://' if the original\nmatch was missing a protocol. ...</div><div class='long'><p>Returns the url that was matched, assuming the protocol to be 'http://' if the original\nmatch was missing a protocol.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getUrlMatchType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-getUrlMatchType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-getUrlMatchType' class='name expandable'>getUrlMatchType</a>( <span class='pre'></span> ) : \"scheme\"/\"www\"/\"tld\"<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string name for the type of URL match that this class\nrepresents. ...</div><div class='long'><p>Returns a string name for the type of URL match that this class\nrepresents.</p>\n\n<p>This helps to determine if the match was made in the original text with a\nprefixed scheme (ex: 'http://www.google.com'), a prefixed 'www' (ex:\n'www.google.com'), or was matched by a known top-level domain (ex:\n'google.com').</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>\"scheme\"/\"www\"/\"tld\"</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeTrailingSlash' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-removeTrailingSlash' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-removeTrailingSlash' class='name expandable'>removeTrailingSlash</a>( <span class='pre'>anchorText</span> ) : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Removes any trailing slash from the given anchorText, in preparation for the text to be displayed. ...</div><div class='long'><p>Removes any trailing slash from the given <code>anchorText</code>, in preparation for the text to be displayed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>anchorText</span> : String<div class='sub-desc'><p>The text of the anchor that is being generated, for which to remove any trailing\n  slash ('/') that may exist.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The <code>anchorText</code>, with the trailing slash removed.</p>\n</div></li></ul></div></div></div><div id='method-setOffset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Autolinker.match.Match' rel='Autolinker.match.Match' class='defined-in docClass'>Autolinker.match.Match</a><br/><a href='source/Match.html#Autolinker-match-Match-method-setOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Match-method-setOffset' class='name expandable'>setOffset</a>( <span class='pre'>offset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the offset of where the match was made in the input string. ...</div><div class='long'><p>Sets the <a href=\"#!/api/Autolinker.match.Match-property-offset\" rel=\"Autolinker.match.Match-property-offset\" class=\"docClass\">offset</a> of where the match was made in the input string.</p>\n\n<p>A <a href=\"#!/api/Autolinker.matcher.Matcher\" rel=\"Autolinker.matcher.Matcher\" class=\"docClass\">Autolinker.matcher.Matcher</a> will be fed only HTML text nodes,\nand will therefore set an original offset that is relative to the HTML\ntext node itself. However, we want this offset to be relative to the full\nHTML input string, and thus if using <a href=\"#!/api/Autolinker-method-parse\" rel=\"Autolinker-method-parse\" class=\"docClass\">Autolinker.parse</a> (rather\nthan calling a <a href=\"#!/api/Autolinker.matcher.Matcher\" rel=\"Autolinker.matcher.Matcher\" class=\"docClass\">Autolinker.matcher.Matcher</a> directly), then this\noffset is corrected after the Matcher itself has done its job.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-stripProtocolRelativePrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-stripProtocolRelativePrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-stripProtocolRelativePrefix' class='name expandable'>stripProtocolRelativePrefix</a>( <span class='pre'>text</span> ) : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Strips any protocol-relative '//' from the anchor text. ...</div><div class='long'><p>Strips any protocol-relative '//' from the anchor text.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text of the anchor that is being generated, for which to strip off the\n  protocol-relative prefix (such as stripping off \"//\")</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The <code>anchorText</code>, with the protocol-relative prefix stripped.</p>\n</div></li></ul></div></div></div><div id='method-stripUrlPrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.match.Url'>Autolinker.match.Url</span><br/><a href='source/Url.html#Autolinker-match-Url-method-stripUrlPrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.match.Url-method-stripUrlPrefix' class='name expandable'>stripUrlPrefix</a>( <span class='pre'>text</span> ) : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Strips the URL prefix (such as \"http://\" or \"https://\") from the given text. ...</div><div class='long'><p>Strips the URL prefix (such as \"http://\" or \"https://\") from the given text.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text of the anchor that is being generated, for which to strip off the\n  url prefix (such as stripping off \"http://\")</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The <code>anchorText</code>, with the prefix stripped.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});